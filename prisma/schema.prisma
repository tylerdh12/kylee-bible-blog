generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

enum UserRole {
  ADMIN
  DEVELOPER
  SUBSCRIBER
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?  // Optional for social logins
  name      String?
  role      UserRole @default(SUBSCRIBER)
  isActive  Boolean  @default(true)
  avatar    String?
  bio       String?
  website   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts     Post[]
  comments  Comment[]
}

model Post {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  published   Boolean  @default(false)
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  authorId    String
  author      User     @relation(fields: [authorId], references: [id])

  tags        Tag[]
  comments    Comment[]
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  isApproved Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  authorId  String
  author    User     @relation(fields: [authorId], references: [id])

  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  parentId  String?
  parent    Comment? @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Comment[] @relation("CommentReplies")
}

model Goal {
  id          String   @id @default(cuid())
  title       String
  description String?
  targetAmount Float
  currentAmount Float   @default(0)
  deadline    DateTime?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  donations   Donation[]
}

model Donation {
  id        String   @id @default(cuid())
  amount    Float
  donorName String?
  message   String?
  anonymous Boolean  @default(false)
  createdAt DateTime @default(now())
  
  goalId    String?
  goal      Goal?    @relation(fields: [goalId], references: [id])
}